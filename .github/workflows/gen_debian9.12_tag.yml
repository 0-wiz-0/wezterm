name: debian9.12_tag

on:
  push:
    tags:
      - "20*"

jobs:
  build:
    runs-on: "ubuntu-latest"
    container: "debian:9.12"
    steps:
      - name: "set APT to non-interactive"
        shell: bash
        run: "echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections"
      - name: "Update APT"
        shell: bash
        run: "apt update"
      - name: "Cache Git installation"
        uses: actions/cache@v2.1.7
        with:
          path: "/usr/local/git"
          key: "debian9.12-git-2.26.2"
      - name: "Install Git from source"
        shell: bash
        run: |
          apt-get install -y wget libcurl4-openssl-dev libexpat-dev gettext libssl-dev libz-dev gcc libextutils-autoinstall-perl make
          if test ! -x /usr/local/git/bin/git ; then
              cd /tmp
              wget https://github.com/git/git/archive/v2.26.2.tar.gz
              tar xzf v2.26.2.tar.gz
              cd git-2.26.2
              make prefix=/usr/local/git install
          fi
          ln -s /usr/local/git/bin/git /usr/local/bin/git
      - name: "Install curl"
        shell: bash
        run: "apt-get install -y curl"
      - name: "Install GitHub keyring"
        shell: bash
        run: "curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg |  dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg"
      - name: "Add GitHub package list"
        shell: bash
        run: "echo deb \\[arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg\\] https://cli.github.com/packages stable main |  tee /etc/apt/sources.list.d/github-cli.list > /dev/null"
      - name: "Update APT"
        shell: bash
        run: "apt update"
      - name: "Install GH CLI"
        shell: bash
        run: " apt install gh"
      - name: "Ensure /run/sshd exists"
        shell: bash
        run: "mkdir -p /run/sshd"
      - name: "Install openssh-server"
        shell: bash
        run: "apt-get install -y openssh-server"
      - name: "checkout repo"
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: "Fetch tags"
        shell: bash
        run: "git fetch --depth=1 origin +refs/tags/*:refs/tags/*"
      - name: "Fetch tag/branch history"
        shell: bash
        run: "git fetch --prune --unshallow"
      - name: "Install Rust"
        uses: actions-rs/toolchain@v1
        with:
          profile: "minimal"
          toolchain: "stable"
          override: true
          components: "rustfmt"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
      - name: "Cache cargo"
        uses: actions/cache@v2.1.7
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: "debian9.12-None-2-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}-cargo"
      - name: "Install System Deps"
        shell: bash
        run: "env PATH=$PATH ./get-deps"
      - name: "Build (Release mode)"
        shell: bash
        run: "cargo build --all --release"
      - name: "Test (Release mode)"
        shell: bash
        run: "cargo test --all --release"
      - name: "Package"
        shell: bash
        run: "bash ci/deploy.sh"
      - name: "Create pre-release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: "bash ci/retry.sh bash ci/create-release.sh ${{ github.event.release.tag_name }}"
      - name: "Upload to Tagged Release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: "bash ci/retry.sh gh release upload --clobber ${ github.event.release.tag_name } wezterm-*.deb wezterm-*.xz wezterm-*.tar.gz"
