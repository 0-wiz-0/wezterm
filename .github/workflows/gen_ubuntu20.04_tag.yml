name: ubuntu20.04_tag

on:
  push:
    tags:
      - "20*"

jobs:
  build:
    runs-on: "ubuntu-20.04"
    
    steps:
      - name: "Update APT"
        shell: bash
        run: "sudo -n apt update"
      - name: "Install git"
        shell: bash
        run: "sudo -n apt-get install -y git"
      - name: "checkout repo"
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: "Fetch tags"
        shell: bash
        run: "git fetch --depth=1 origin +refs/tags/*:refs/tags/*"
      - name: "Fetch tag/branch history"
        shell: bash
        run: "git fetch --prune --unshallow"
      - name: "Install Rust"
        uses: actions-rs/toolchain@v1
        with:
          profile: "minimal"
          toolchain: "stable"
          override: true
          components: "rustfmt"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
      - name: "Cache cargo"
        uses: actions/cache@v2.1.7
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: "ubuntu20.04-None-2-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}-cargo"
      - name: "Install System Deps"
        shell: bash
        run: "sudo -n env PATH=$PATH ./get-deps"
      - name: "Build (Release mode)"
        shell: bash
        run: "cargo build --all --release"
      - name: "Test (Release mode)"
        shell: bash
        run: "cargo test --all --release"
      - name: "Package"
        shell: bash
        run: "bash ci/deploy.sh"
      - name: "Create pre-release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: "bash ci/retry.sh bash ci/create-release.sh ${{ github.event.release.tag_name }}"
      - name: "Upload to Tagged Release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: "bash ci/retry.sh gh release upload --clobber ${ github.event.release.tag_name } wezterm-*.deb wezterm-*.xz wezterm-*.tar.gz"
